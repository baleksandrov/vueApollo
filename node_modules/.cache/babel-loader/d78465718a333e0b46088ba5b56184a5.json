{"remainingRequest":"/home/bojidar/Desktop/graphQLvue/node_modules/babel-loader/lib/index.js!/home/bojidar/Desktop/graphQLvue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/bojidar/Desktop/graphQLvue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/bojidar/Desktop/graphQLvue/src/components/my-repos.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/bojidar/Desktop/graphQLvue/src/components/my-repos.vue","mtime":1559301675482},{"path":"/home/bojidar/Desktop/graphQLvue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bojidar/Desktop/graphQLvue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/bojidar/Desktop/graphQLvue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bojidar/Desktop/graphQLvue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _taggedTemplateLiteral from \"/home/bojidar/Desktop/graphQLvue/node_modules/@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n        query MyRepos($first: Int!) {\\n          viewer {\\n            repositories(first: $first) {\\n              edges {\\n                node {\\n                  id\\n                  name\\n                  viewerHasStarred\\n                  stargazers {\\n                    totalCount\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { gql } from \"apollo-boost\";\nimport AddStar from \"./add-star\";\nexport default {\n  data: function data() {\n    return {\n      viewer: [],\n      loading: true\n    };\n  },\n  components: {\n    AddStar: AddStar\n  },\n  apollo: {\n    viewer: {\n      query: gql(_templateObject()),\n      result: function result(_ref) {\n        var data = _ref.data;\n\n        if (data) {\n          this.loading = false;\n        }\n      },\n      variables: {\n        first: 10\n      }\n    }\n  },\n  methods: {\n    refetch: function refetch() {\n      this.$apollo.queries.viewer.refetch();\n    }\n  }\n};",{"version":3,"sources":["my-repos.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA,SAAA,GAAA,QAAA,cAAA;AACA,OAAA,OAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,EADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAAA;AAIA,GANA;AAOA,EAAA,UAAA,EAAA;AACA,IAAA,OAAA,EAAA;AADA,GAPA;AAUA,EAAA,MAAA,EAAA;AACA,IAAA,MAAA,EAAA;AACA,MAAA,KAAA,EAAA,GAAA,mBADA;AAmBA,MAAA,MAAA,EAAA,sBAAA;AAAA,YAAA,IAAA,QAAA,IAAA;;AACA,YAAA,IAAA,EAAA;AACA,eAAA,OAAA,GAAA,KAAA;AACA;AACA,OAvBA;AAwBA,MAAA,SAAA,EAAA;AAAA,QAAA,KAAA,EAAA;AAAA;AAxBA;AADA,GAVA;AAsCA,EAAA,OAAA,EAAA;AACA,IAAA,OAAA,EAAA,mBAAA;AACA,WAAA,OAAA,CAAA,OAAA,CAAA,MAAA,CAAA,OAAA;AACA;AAHA;AAtCA,CAAA","sourcesContent":["<template>\n  <div class=\"repos\">\n    <div v-if=\"loading\">loading</div>\n    <div v-else>\n      <h2>First 10 repositories</h2>\n      <!-- looping through viewer repos -->\n      <ul v-for=\"repo in viewer.repositories.edges\" :key=\"repo.node.id\">\n        <li>{{repo.node.name}}</li>\n        <li>Stars : {{repo.node.stargazers.totalCount}}</li>\n        <li v-if=\"!repo.node.viewerHasStarred\">\n          <AddStar :id=\"repo.node.id\" :refetch=\"refetch\"/>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { gql } from \"apollo-boost\";\nimport AddStar from \"./add-star\";\nexport default {\n  data: function() {\n    return {\n      viewer: [],\n      loading: true\n    };\n  },\n  components: {\n    AddStar\n  },\n  apollo: {\n    viewer: {\n      query: gql`\n        query MyRepos($first: Int!) {\n          viewer {\n            repositories(first: $first) {\n              edges {\n                node {\n                  id\n                  name\n                  viewerHasStarred\n                  stargazers {\n                    totalCount\n                  }\n                }\n              }\n            }\n          }\n        }\n      `,\n      result: function({ data }) {\n        if (data) {\n          this.loading = false;\n        }\n      },\n      variables: { first: 10 }\n    }\n  },\n  methods: {\n    refetch: function() {\n      this.$apollo.queries.viewer.refetch();\n    }\n  }\n};\n</script>\n\n<style scoped>\nul {\n  list-style: none;\n  border: 1px solid;\n  padding: 1rem;\n}\n</style>\n"],"sourceRoot":"src/components"}]}